coord_flip() +
theme_linedraw()
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
theme_linedraw()
fix.data %>%
ggplot(aes(colour=Model)) +
geom_pointrange(aes( x = Variable,
y = mean,
ymin = `0.025quant`,
ymax = `0.975quant`),
position = position_dodge(width = 1/2),
lwd = 1/2) +
scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
theme_linedraw()
db.lima.sf <-  lima.shp %>%
inner_join(db.lima.sp %>%
ungroup() %>%
mutate(fit =lima.iid$summary.fitted.values$mean,
fit2=lima.spat$summary.fitted.values$mean) %>%
group_by(prov,distr,week,year,month) %>%
slice(1),
by = c("prov" ="prov", "distr"="distr"))
map.true <- db.lima.sf %>%
filter(year==2019 & month == 12) %>%
ggplot() +
geom_sf(aes(fill=n/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nactual deaths x10\n(12/2019)",
option="rocket",direction = -1)
db.lima.sf <-  lima.shp %>%
inner_join(db.lima.sp %>%
ungroup() %>%
mutate(fit =lima.iid$summary.fitted.values$mean,
fit2=lima.spat$summary.fitted.values$mean) %>%
group_by(prov,distr,week,year,month) %>%
slice(1),
by = c("prov" ="prov", "distr"="distr"))
map.true <- db.lima.sf %>%
filter(year==2019 & month == 12) %>%
ggplot() +
geom_sf(aes(fill=n/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nactual deaths x10\n(12/2019)",
option="rocket",direction = -1)
map.iid <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nfitted deaths x10\n(iid 12/2019)",
option="rocket",
direction = -1)
map.fit <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit2/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name  ="Number of\nfitted deaths x10\n(spatial 12/2019)",
option="rocket",direction = -1)
cowplot::plot_grid(map.true, map.iid, map.fit, ncol = 3)
# install.packages("kableExtra")
# install.packages("tidyverse")
# install.packages("yardstick")
# install.packages("gt")
# install.packages("spdep")
# install.packages("viridis")
# install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(kableExtra)
library(tidyverse)
library(yardstick)
library(gt)
library(spdep)
library(viridis)
library(INLA)
#death data and covariables
db <- readRDS("db_excess_proc_dis_1819_m.rds")
db %>%
group_by(date) %>%
summarise(n=sum(n)) %>%
ggplot(aes(x=date,y=n)) +
geom_line(color="red") +
geom_point(color="red",shape=21) +
labs(y = "Deaths count") +
theme_bw(base_size = 15)
lima.shp   <- readRDS("lima_shp.rds")
db.sp.lima <- lima.shp %>%
inner_join(db %>%
group_by(year,prov,distr) %>%
summarise(n=sum(n)))
db.sp.lima %>%
ggplot() +
geom_sf(aes(fill=n)) +
scale_fill_viridis(name="Number of deaths",direction = -1,option = "rocket") +
facet_wrap(vars(year)) +
theme_linedraw(base_size = 25)
summary(lima.m1)
lima.m1$summary.fixed
# Assuming an a priori Distribution for the years: "linear"
lima.linear <- inla(n ~ 1 + year + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Assuming an a priori distribution for the weeks: "rw1" and linear for the  year
lima.rw <- inla(n ~ 1 + year + f(week,model="rw1") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Assuming an a priori distribution for the weeks: "rw1" and ar1 for the year
lima.ar_rw <- inla(n ~ 1  + f(year,model="ar1") + f(week,model="rw1") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
db.lima.sp <- db %>%
group_by(distr) %>%
mutate(id.sp=cur_group_id())
lima.iid <- inla(n ~ 1  + year + f(week,model="rw1") + f(id.sp, model = "iid") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db.lima.sp,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Creating the neighborhood structure
lima.adj <- poly2nb(lima.shp)
# Spatial weights
W.lima <- nb2mat(lima.adj, style = "W")
lima.spat <- inla(n ~ 1  + year + f(week,model="rw1") + f(id.sp, model = "bym", graph=W.lima) + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db.lima.sp,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
f.linear <- lima.linear$summary.fixed %>%
mutate(Model="linear") %>%
rownames_to_column("Variable")
f.rw <- lima.rw$summary.fixed %>%
mutate(Model="RW") %>%
rownames_to_column("Variable")
f.ar_rw <- lima.ar_rw$summary.fixed %>%
mutate(Model="AR_RW") %>%
rownames_to_column("Variable")
f.iid <-lima.iid$summary.fixed %>%
mutate(Model="iid") %>%
rownames_to_column("Variable")
f.spat <- lima.spat$summary.fixed %>%
mutate(Model="Spatial") %>%
rownames_to_column("Variable")
fix.data<-rbind(f.linear, f.rw, f.ar_rw, f.iid, f.spat) %>%
filter(!str_detect(Variable, 'year')) %>%
filter(!str_detect(Variable, '(Intercept)'))
fix.data %>%
ggplot(aes(colour=Model)) +
geom_pointrange(aes( x = Variable,
y = mean,
ymin = `0.025quant`,
ymax = `0.975quant`),
position = position_dodge(width = 1/2),
lwd = 1/2) +
scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
theme_linedraw()
db.lima.sf <-  lima.shp %>%
inner_join(db.lima.sp %>%
ungroup() %>%
mutate(fit =lima.iid$summary.fitted.values$mean,
fit2=lima.spat$summary.fitted.values$mean) %>%
group_by(prov,distr,week,year,month) %>%
slice(1),
by = c("prov" ="prov", "distr"="distr"))
map.true <- db.lima.sf %>%
filter(year==2019 & month == 12) %>%
ggplot() +
geom_sf(aes(fill=n/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nactual deaths x10\n(12/2019)",
option="rocket",direction = -1)
map.iid <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nfitted deaths x10\n(iid 12/2019)",
option="rocket",
direction = -1)
map.true <- db.lima.sf %>%
filter(year==2019 & month == 12) %>%
ggplot() +
geom_sf(aes(fill=n/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nactual deaths x10\n(12/2019)",
option="rocket",direction = -1)
map.iid <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nfitted deaths x10\n(iid 12/2019)",
option="rocket",
direction = -1)
map.fit <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit2/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name  ="Number of\nfitted deaths x10\n(spatial 12/2019)",
option="rocket",direction = -1)
cowplot::plot_grid(map.true, map.iid, map.fit, ncol = 3)
fit.m.linear <- lima.linear$summary.fitted.values$mean
fit.m.rw <- lima.rw$summary.fitted.values$mean
fit.m.ar_rw <- lima.ar_rw$summary.fitted.values$mean
fit.m.iid <- lima.iid$summary.fitted.values$mean
fit.m.spat <- lima.spat$summary.fitted.values$mean
n.lima <- db.lima.sp$n
datos  <-  list("linear" = fit.m.linear,
"RW" = fit.m.rw,
"AR_RW" = fit.m.ar_rw,
"iid" = fit.m.iid,
"spatial" = fit.m.spat) %>%
as.data.frame() %>%
gather(key = "modelo", value = "fit") %>%
group_by(modelo) %>%
mutate(actual = n.lima,
date = db.lima.sp$date,
prov = db.lima.sp$prov,
distr = db.lima.sp$distr)
#Metrics to use
perform.metrics <- metric_set(mae,mase,smape,rmse)
# Calculation of metrics in the forecast year
tbl.yrd.full <-  datos                    %>%
group_by(modelo)         %>%
perform.metrics(truth    = actual,
estimate = fit)
# Calculation of metrics in the forecast year
tbl.yrd.full <-  datos %>%
group_by(modelo) %>%
perform.metrics(truth = actual, estimate = fit)
#Metrics to use
perform.metrics <- metric_set(mae,mase,smape,rmse)
# Results table
tbl.yrd.full %>%
pivot_wider(id_cols = modelo,
names_from = .metric,
values_from = .estimate) %>%
gt() %>%
tab_header(title = md("in-sample accuracy metrics"))
cpo.linear <--2*sum(log(lima.linear$cpo$cpo))
cpo.rw <--2*sum(log(lima.rw$cpo$cpo))
cpo.ar_rw <--2*sum(log(lima.ar_rw$cpo$cpo))
cpo.iid <--2*sum(log(lima.iid$cpo$cpo))
cpo.spat <--2*sum(log(lima.spat$cpo$cpo))
data.cpo  <-  list("linear" = cpo.linear,
"RW" = cpo.rw,
"AR_RW" = cpo.ar_rw,
"iid" = cpo.iid,
"spatial" = cpo.spat) %>%
as.data.frame()
data.cpo
data.cpo  <-  list("linear" = cpo.linear,
"RW" = cpo.rw,
"AR_RW" = cpo.ar_rw,
"iid" = cpo.iid,
"spatial" = cpo.spat) %>%
as.data.frame() %>%
summarise(linear = cpo.m3,
linearRW_1      =cpo.m4,
AR_1_RW_1       =cpo.m5,
iid_effects     =cpo.m6,
spatial_effects =cpo.m7)
data.cpo  <-  list("linear" = cpo.linear,
"RW" = cpo.rw,
"AR_RW" = cpo.ar_rw,
"iid" = cpo.iid,
"spatial" = cpo.spat) %>%
as.data.frame() %>%
summarise(linear = cpo.linear,
linearRW_1      =cpo.rw,
AR_1_RW_1       =cpo.ar_rw,
iid_effects     =cpo.iid,
spatial_effects =cpo.spat)
data.cpo
data.cpo  <-  list("linear" = cpo.linear,
"RW" = cpo.rw,
"AR_RW" = cpo.ar_rw,
"iid" = cpo.iid,
"spatial" = cpo.spat) %>%
as.data.frame()
data.cpo
# install.packages("kableExtra")
# install.packages("tidyverse")
# install.packages("yardstick")
# install.packages("gt")
# install.packages("spdep")
# install.packages("viridis")
# install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(kableExtra)
library(tidyverse)
library(yardstick)
library(gt)
library(spdep)
library(viridis)
library(INLA)
#death data and covariables
db <- readRDS("db_excess_proc_dis_1819_m.rds")
db %>%
group_by(date) %>%
summarise(n=sum(n)) %>%
ggplot(aes(x=date,y=n)) +
geom_line(color="red") +
geom_point(color="red",shape=21) +
labs(y = "Deaths count") +
theme_bw(base_size = 15)
lima.shp   <- readRDS("lima_shp.rds")
db.sp.lima <- lima.shp %>%
inner_join(db %>%
group_by(year,prov,distr) %>%
summarise(n=sum(n)))
db.sp.lima %>%
ggplot() +
geom_sf(aes(fill=n)) +
scale_fill_viridis(name="Number of deaths",direction = -1,option = "rocket") +
facet_wrap(vars(year)) +
theme_linedraw(base_size = 25)
lima.m0 <- inla(n ~ 1 + temperature,
verbose = F,
data = db)
lima.m1 <- inla(n ~ 1 + temperature,
verbose = F,
data = db,
family = "Gaussian",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
summary(lima.m1)
lima.m1$summary.fixed
# Assuming an a priori Distribution for the years: "linear"
lima.linear <- inla(n ~ 1 + year + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Assuming an a priori distribution for the weeks: "rw1" and linear for the  year
lima.rw <- inla(n ~ 1 + year + f(week,model="rw1") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Assuming an a priori distribution for the weeks: "rw1" and ar1 for the year
lima.ar_rw <- inla(n ~ 1  + f(year,model="ar1") + f(week,model="rw1") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
db.lima.sp <- db %>%
group_by(distr) %>%
mutate(id.sp=cur_group_id())
lima.iid <- inla(n ~ 1  + f(year,model="ar1") + f(week,model="rw1") + f(id.sp, model = "iid") + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db.lima.sp,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
# Creating the neighborhood structure
lima.adj <- poly2nb(lima.shp)
# Spatial weights
W.lima <- nb2mat(lima.adj, style = "W")
lima.spat <- inla(n ~ 1  + f(year,model="ar1") + f(week,model="rw1") + f(id.sp, model = "bym", graph=W.lima) + temperature + pp.insured + pp.pover + pp.no.elec + pp.no.water,
verbose = F,
data = db.lima.sp,
family = "nbinomial",
control.compute = list(dic=TRUE, waic=TRUE,cpo=TRUE),
control.predictor = list(link = 1))
f.linear <- lima.linear$summary.fixed %>%
mutate(Model="linear") %>%
rownames_to_column("Variable")
f.rw <- lima.rw$summary.fixed %>%
mutate(Model="RW") %>%
rownames_to_column("Variable")
f.ar_rw <- lima.ar_rw$summary.fixed %>%
mutate(Model="AR_RW") %>%
rownames_to_column("Variable")
f.iid <-lima.iid$summary.fixed %>%
mutate(Model="iid") %>%
rownames_to_column("Variable")
f.spat <- lima.spat$summary.fixed %>%
mutate(Model="Spatial") %>%
rownames_to_column("Variable")
fix.data<-rbind(f.linear, f.rw, f.ar_rw, f.iid, f.spat) %>%
filter(!str_detect(Variable, 'year')) %>%
filter(!str_detect(Variable, '(Intercept)'))
fix.data %>%
ggplot(aes(colour=Model)) +
geom_pointrange(aes( x = Variable,
y = mean,
ymin = `0.025quant`,
ymax = `0.975quant`),
position = position_dodge(width = 1/2),
lwd = 1/2) +
scale_color_brewer(palette = "Paired") +
geom_hline(yintercept = 0, lty = 2) +
coord_flip() +
theme_linedraw()
db.lima.sf <-  lima.shp %>%
inner_join(db.lima.sp %>%
ungroup() %>%
mutate(fit =lima.iid$summary.fitted.values$mean,
fit2=lima.spat$summary.fitted.values$mean) %>%
group_by(prov,distr,week,year,month) %>%
slice(1),
by = c("prov" ="prov", "distr"="distr"))
map.true <- db.lima.sf %>%
filter(year==2019 & month == 12) %>%
ggplot() +
geom_sf(aes(fill=n/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nactual deaths x10\n(12/2019)",
option="rocket",direction = -1)
map.iid <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name="Number of\nfitted deaths x10\n(iid 12/2019)",
option="rocket",
direction = -1)
map.fit <- db.lima.sf %>%
filter(year==2019 & month ==12) %>%
ggplot() +
geom_sf(aes(fill=fit2/10)) +
theme_linedraw(base_size = 23) +
scale_fill_viridis(name  ="Number of\nfitted deaths x10\n(spatial 12/2019)", option="rocket",direction = -1)
cowplot::plot_grid(map.true, map.iid, map.fit, ncol = 3)
fit.m.linear <- lima.linear$summary.fitted.values$mean
fit.m.rw <- lima.rw$summary.fitted.values$mean
fit.m.ar_rw <- lima.ar_rw$summary.fitted.values$mean
fit.m.iid <- lima.iid$summary.fitted.values$mean
fit.m.spat <- lima.spat$summary.fitted.values$mean
n.lima <- db.lima.sp$n
fitted_vals  <-  list("linear" = fit.m.linear,
"RW" = fit.m.rw,
"AR_RW" = fit.m.ar_rw,
"iid" = fit.m.iid,
"spatial" = fit.m.spat) %>%
as.data.frame() %>%
gather(key = "modelo", value = "fit") %>%
group_by(modelo) %>%
mutate(actual = n.lima,
date = db.lima.sp$date,
prov = db.lima.sp$prov,
distr = db.lima.sp$distr)
#Metrics to use
perform.metrics <- metric_set(mae,mase,smape,rmse)
# Calculation of metrics in the forecast year
tbl.yrd.full <-  fitted_vals %>%
group_by(modelo) %>%
perform.metrics(truth = actual, estimate = fit)
#Metrics to use
perform.metrics <- metric_set(mae,mase,smape,rmse)
# Calculation of metrics in the forecast year
tbl.yrd.per <- fitted_vals %>%
group_by(modelo,prov,distr) %>%
perform.metrics(truth = actual, estimate = fit)
# Results table
tbl.yrd.full %>%
pivot_wider(id_cols     = modelo,
names_from  = .metric,
values_from = .estimate) %>%
gt() %>%
tab_header(title = md("in-sample accuracy metrics")) %>%
data_color(columns = vars(mae,mase,smape,rmse),
colors = scales::col_numeric(
palette = c("#aa3d01","white"),domain = NULL)) %>%
tab_footnote(footnote = "mae = mean absolute error",
locations = cells_column_labels(columns = mae)) %>%
tab_footnote(footnote = "mase = Mean absolute scaled error",
locations = cells_column_labels(columns = mase)) %>%
tab_footnote(footnote = "smape = Symmetric mean absolute percentage error", locations = cells_column_labels(columns = smape)) %>%
tab_footnote(footnote = "rsme = Root square mean error",
locations = cells_column_labels(columns = rmse))
tbl.yrd.per.sf <- lima.shp  %>%
inner_join(tbl.yrd.per, by=c("prov"="prov","distr"="distr"))
tbl.yrd.per.sf %>%
filter(.metric=="mae" & modelo %in% c("iid.effects","spatial.effects")) %>%
ggplot() +
geom_sf(aes(fill=.estimate),lwd=0.1) +
scale_fill_distiller(palette="Reds",direction=1,name="MAE") +
facet_wrap(vars(modelo)) +
theme_linedraw(base_size = 23) +
theme(strip.text = element_text(face = "bold",size = 30))
tbl.yrd.per.sf %>%
filter(.metric=="mae" & modelo %in% c("iid","spatial")) %>%
ggplot() +
geom_sf(aes(fill=.estimate),lwd=0.1) +
scale_fill_distiller(palette="Reds",direction=1,name="MAE") +
facet_wrap(vars(modelo)) +
theme_linedraw(base_size = 23) +
theme(strip.text = element_text(face = "bold",size = 30))
db <- readRDS(url("https://github.com/healthinnovation/Inla_intro/raw/main/db_excess_proc_dis_1819_m.rds"))
#death data and covariables
db2 <- readRDS("db_excess_proc_dis_1819_m.rds")
lima.shp <- readRDS(url("https://github.com/healthinnovation/Inla_intro/raw/main/lima_shp.rds"))
db.frcst <- readRDS(url("https://github.com/healthinnovation/Inla_intro/raw/main/db_excess_proc_dis_20_m.rds"))
